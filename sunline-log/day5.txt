day 5

ES6语法

	...	- 扩展运算符
	- 自动展开数组，不需要在使用apply命令转换，如：
		Math.max(...[2,3,4]);
		arr1.push(...arr2);
	- 与解构赋值结合

jQuery $(document).ready(function(){}) / $(function(){}) 和 原生 window.onload 的区别

	-----------------------------------------------------------------
	|			|								| $(ducument).re  	|
	|			|	window.onload				|ady(function(){})	|
	|---------------------------------------------------------------|
	|加载时机	|页面所有内容加载完(文档和			|在页面Dom结构完		|	
	|			|图片)							|成后就可执行			|
	|---------------------------------------------------------------|
	|执行次数	|只能执行一次，且执行最后			|可执行多次，不会		|
	|			|一次代码块,之前的会被覆盖			|被覆盖				|
	|---------------------------------------------------------------|
	|简写方案	|		无						|$(function(){})	|
	|-------------------------------------------|-------------------|
	|举例	|window.onload=function(){alert(1)};|无限制，可多次执行	|
	|		|window.onload=function(){alert(2)};|				 	|
	|		|只执行第二行							|					|
	-----------------------------------------------------------------

Vuex

	- state
	  存放值，组件中调用时使用：this.$store.state.属性名 获取。
	- mutations
	  存放方法，组件中调用使用： this.$store.commit('方法名', '参数') 或者 this.$store.commit({
		type: '方法名',
		...其他参数对象
	  })
	  系统自动匹配 type 名与方法名。且在 mutations 中，不可以写入异步方法，因为在后期调试时会untrackable 对应的执行时间。

组件间传值的 6 种方法
[https://juejin.im/post/5cde0b43f265da03867e78d3#heading-7]

	- Vuex
		-- 全局拥有一个State存放数据，当组件要更改State中的数据时，必须通过Mutation进行。

	- props / emit
		-- 在子组件中设置 props 属性，手动抛出标签属性；在子组件中使用 emit 抛出方法，在父组件中通过绑定该方法实现监控(this.$emit('方法名', 参数列表))。

	- $emit / $on
		-- 

	- $attrs / $listeners

	- provide / inject

	- $parent / $children